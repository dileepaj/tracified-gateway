---
- hosts: staging
  environment:
    PYTHONPATH: /home/{{ ansible_user }}/.local/lib/python3.10/site-packages
  tasks:
    - name: Install required system packages
      become: true
      apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
          - python3-setuptools
        state: latest
        update_cache: true
    - name: Add Docker GPG key to APT keyring
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
        | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg --batch --yes
      become: true
    - name: Add Docker repository to apt sources list
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
        | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      become: true
    - name: Install docker CE
      become: true
      apt:
        name: docker-ce
        state: present
        update_cache: yes
    - name: Install pip
      become: true
      apt:
        name: python3-pip
        state: present
        update_cache: yes
    - name: Install docker-py
      pip:
        name: docker
    - name: Install AWS CLI
      pip:
        name: awscli
    - name: Get ECR login credentials and login with Docker
      become: true
      shell: "$(/home/{{ ansible_user }}/.local/bin/aws ecr get-login --no-include-email --region ap-south-1)"
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY : "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    - name: Create volume for docker
      become: true
      docker_volume:
        name: gateway_logs
    - name: Create a network
      become: true
      docker_network:
        name: tillitgatewaynetwork
    - name: Run docker
      become: true
      debugger: on_failed
      docker_container:
        name: tracified-gateway
        image: 453230908534.dkr.ecr.ap-south-1.amazonaws.com/tracified/gateway-staging
        published_ports: "8000:8000"
        restart: yes
        restart_policy: on-failure
        state: started
        pull: yes
        volumes:
          - gateway_logs:/app/logs
        env:
            GATEWAY_PORT: "{{ lookup('env','GATEWAY_PORT') }}"
            PublicKey: "{{ lookup('env','PublicKey') }}"
            SecretKey: "{{ lookup('env','SecretKey') }}"
            ENVIRONMENT: "{{ lookup('env','ENVIRONMENT') }}"
            DBUSERNAME: "{{ lookup('env','DBUSERNAME') }}"
            DBPASSWORD: "{{ lookup('env','DBPASSWORD') }}"
            DBHOST: "{{ lookup('env','DBHOST') }}"
            DBPORT: "{{ lookup('env','DBPORT') }}"
            DBNAME: "{{ lookup('env','DBNAME') }}"
            ADMINDBUSERNAME: "{{ lookup('env','ADMINDBUSERNAME') }}"
            ADMINDBPASSWORD: "{{ lookup('env','ADMINDBPASSWORD') }}"
            ADMINDBHOST: "{{ lookup('env','ADMINDBHOST') }}"
            ADMINDBPORT: "{{ lookup('env','ADMINDBPORT') }}"
            ADMINDBNAME: "{{ lookup('env','ADMINDBNAME') }}"
            HORIZONCLIENT: "{{ lookup('env','HORIZONCLIENT') }}"
            SOLANACLIENT: "{{ lookup('env','SOLANACLIENT') }}"
            ADMIN_ATLAS: "{{ lookup('env','ADMIN_ATLAS') }}"
            GATEWAY_ATLAS: "{{ lookup('env','GATEWAY_ATLAS') }}"
            STELLARLABORATORYCLIENT: "{{ lookup('env','STELLARLABORATORYCLIENT') }}"
            TRACIFIEDBACKEND: "{{ lookup('env','TRACIFIEDBACKEND') }}"
            TRACIFIEDBACKENDTOKEN: "{{ lookup('env','TRACIFIEDBACKENDTOKEN') }}"
            AWS_ACCESS_KEY: "{{ lookup('env','AWS_ACCESS_KEY') }}"
            AWS_SECRET_KEY: "{{ lookup('env','AWS_SECRET_KEY') }}"
            AWS_REGION: "{{ lookup('env','AWS_REGION') }}"
            AWS_KMS_KEY_ID: "{{ lookup('env','AWS_KMS_KEY_ID') }}"
            NFTSTELLARISSUERPUBLICKEYK : "{{ lookup('env','NFTSTELLARISSUERPUBLICKEYK ') }}"
            NFTSTELLARISSUERSECRETKEY : "{{ lookup('env','NFTSTELLARISSUERSECRETKEY ') }}"
            NFTAccountKeyEncodedPassword: "{{ lookup('env','NFTAccountKeyEncodedPassword') }}"
            NFTISSUESECRETKEYPOLYGON: "{{ lookup('env','NFTISSUESECRETKEYPOLYGON') }}"
            NFTISSUEPUBLICKKEYPOLYGON: "{{ lookup('env','NFTISSUEPUBLICKKEYPOLYGON') }}"
            NFTRECEIVERPUBLICKPOLYGON: "{{ lookup('env','NFTRECEIVERPUBLICKPOLYGON') }}"
            NFTRECEIVERSECRETKEYPOLYGON: "{{ lookup('env','NFTRECEIVERSECRETKEYPOLYGON') }}"
            HOMEDOMAIN: "{{ lookup('env','HOMEDOMAIN') }}"
            SPONSORERPK: "{{ lookup('env','SPONSORERPK') }}"
            SPONSORERSK: "{{ lookup('env','SPONSORERSK') }}"
            WALLETSECRET: "{{ lookup('env','WALLETSECRET') }}"
            GMAILHOST: "{{ lookup('env','GMAILHOST') }}"
            GOMAILPORT: "{{ lookup('env','GOMAILPORT') }}"
            GOMAILSENDER: "{{ lookup('env','GOMAILSENDER') }}"
            GOMAILSENDERPW: "{{ lookup('env','GOMAILSENDERPW') }}"
            ALLOWREQUESTPERDAY: "{{ lookup('env','ALLOWREQUESTPERDAY') }}"
            ALLOWREQUESTPERWEEK: "{{ lookup('env','ALLOWREQUESTPERWEEK') }}"
            SOCILAIMPACTPUBLICKKEY: "{{ lookup('env','SOCILAIMPACTPUBLICKKEY') }}"
            SOCILAIMPACTSEED: "{{ lookup('env','SOCILAIMPACTSEED') }}"
            RABBITUSER: "{{ lookup('env','RABBITUSER') }}"
            RABBITPASSWORD: "{{ lookup('env','RABBITPASSWORD') }}"
            RABBITMQ_SERVICE_HOST: "{{ lookup('env','RABBITMQ_SERVICE_HOST') }}"
            RABBITPORT: "{{ lookup('env','RABBITPORT') }}"
            LOGSTYPE: "{{ lookup('env','LOGSTYPE') }}"